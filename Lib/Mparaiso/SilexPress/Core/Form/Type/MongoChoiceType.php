<?php
namespace Mparaiso\SilexPress\Core\Form\Type;
use Mparaiso\SilexPress\Core\Form\Extension\MongoObjectIdDataTransformer;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\Extension\Core\ChoiceList\ChoiceList;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\Options;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

/**
 * Class MongoChoiceType
 * @package Mparaiso\SilexPress\Core\Form\Type
 * A list of documents from the database
 * the value is an ObjectId
 */
class MongoChoiceType extends AbstractType
{
    function __construct(\MongoDB $mongoDB)
    {
        $this->mongoDB = $mongoDB;
    }

    function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $mongoDB = $this->mongoDB;
        $resolver->setRequired(array("collection", "query", "key"));
        //@see DoctrineType
        $resolver->setDefaults(array("choice_list" => function (Options $options) use ($mongoDB) {
            // add default choice list option
            $collection = $this->mongoDB->selectCollection($options["collection"]);
            $query_result = $collection->find($options["query"]);
            $choices = array();
            $labels = array();
            foreach ($query_result as $result) {
                $choices[] = (string)$result["_id"];
                $labels[] = (string)$result[$options["key"]];
            }
            return new ChoiceList($choices, $labels);
        },));
    }

    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        parent::buildForm($builder, $options); // TODO: Change the autogenerated stub
        $builder->addModelTransformer(new MongoObjectIdDataTransformer);
    }

    function getParent()
    {
        return "choice";
    }

    public function getName()
    {
        return "mongochoice";
    }

}
